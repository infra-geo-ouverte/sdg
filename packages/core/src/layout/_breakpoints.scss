@use 'sass:map';

// https://design.quebec.ca/design/bases/grille-8px#c84016
$breakpoints: (
  small: (
    min-width: 0,
    max-width: 575px,
    container-max-width: container-max-width('mobile'),
    columns: 4,
    spacing: 16px,
    margins: 8px
  ),
  medium: (
    min-width: 576px,
    max-width: 767px,
    container-max-width: container-max-width('mobile-landscape'),
    columns: 4,
    spacing: 16px,
    margins: 8px
  ),
  large: (
    min-width: 768px,
    max-width: 991px,
    container-max-width: container-max-width('tablet'),
    columns: 12,
    spacing: 24px,
    margins: 12px
  ),
  extra-large: (
    min-width: 992px,
    max-width: 1199px,
    container-max-width: container-max-width('laptop'),
    columns: 12,
    spacing: 24px,
    margins: 12px
  ),
  maximum: (
    min-width: 1200px,
    max-width: 9999px,
    container-max-width: container-max-width('desktop'),
    columns: 12,
    spacing: 32px,
    margins: 16px
  )
);

$max-content-width: 825px;

$devices: (
  mobile: 'small',
  mobile-landscape: 'medium',
  tablet: 'large',
  laptop: 'extra-large',
  desktop: 'maximum'
);

@function breakpoint($device) {
  @return map.get($devices, $device);
}

@function min-width($device) {
  $breakpoint: breakpoint($device);
  @if $breakpoint {
    @return map.get($breakpoints, $breakpoint, min-width);
  }
}

@function max-width($device) {
  $breakpoint: breakpoint($device);
  @if $breakpoint {
    @return map.get($breakpoints, $breakpoint, max-width);
  }
}

@function container-max-width($device) {
  $breakpoint: breakpoint($device);
  $margins: map.get($breakpoints, $breakpoint, margins);

  @if $breakpoint == 'small' {
    @return calc(map.get($breakpoints, $breakpoint, max-width) - 2 * $margins);
  } @else {
    @return calc(map.get($breakpoints, $breakpoint, min-width) - 2 * $margins);
  }
}

@function columns($device) {
  $breakpoint: breakpoint($device);
  @if $breakpoint {
    @return map.get($breakpoints, $breakpoint, columns);
  }
}

@function spacing($device) {
  $breakpoint: breakpoint($device);
  @if $breakpoint {
    @return map.get($breakpoints, $breakpoint, spacing);
  }
}

@function margins($device) {
  $breakpoint: breakpoint($device);
  @if $breakpoint {
    @return map.get($breakpoints, $breapoint, margins);
  }
}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
// https://github.com/twbs/bootstrap/blob/main/scss/mixins/_breakpoints.scss
@mixin media($device) {
  $breakpoint: breakpoint($device);
  @if $breakpoint {
    $max-width: map.get($breakpoints, $breakpoint, max-width);
    @if $max-width {
      @media (max-width: $max-width) {
        @content;
      }
    } @else {
      @content;
    }
  }
}
